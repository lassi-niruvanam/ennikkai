உள்ளீடு re 
உள்ளீடு collections இலிருந்து OrderedDict
உள்ளீடு math இலிருந்து floor

உள்ளீடு .இடஞ்சார் இலிருந்து இடஞ்சார்


தொகுப்பு அடிமானம் (இடஞ்சார்):
    நிரல்பாகம் __init__(தன், பெயர், ஒருங்குறி, அடிமானங்கள், குறிகள், பிரிப்பு, அடுக்குக்குறி):
        super().__init__(பெயர், ஒருங்குறி, குறிகள்=குறிகள், பிரிப்பு=பிரிப்பு, அடுக்குக்குறி=அடுக்குக்குறி)

        தன்.அடிமானங்கள் = OrderedDict(sorted(அடிமானங்கள்.items(), key=lambda விசை: (விசை[௧], விசை[௦])))
        தன்.அடிமானம் = len(தன்.குறிகள்)

    நிரல்பாகம் எண்ணுக்கு(தன், உரை):
        re.search(rf'[{தன்.அடுக்குக்குறி}]', உரை) ஆனால்:
            பின்கொடு super().எண்ணுக்கு(உரை)

        எதிர் = உரை.startswith('-')
        எதிர் ஆனால்:
            உரை = உரை[௧:]
        ஏதேனில் : 
            உரை = உரை.strip('+')

        முயற்சி:
            முழு, தசம = re.split(rf'[{தன்.பிரிப்பு}]', உரை)
        except ValueError:
            முழு = உரை
            தசம = ஒன்றுமில்லை

        எண் = ௦ 
        முழு ஆனால்:
            பெட்டியல் = list ( reversed ( [ தன் . அடிமானங்கள் [ அ ] அ in தன் . அடிமானங்கள் ஆனால் ஏதேனில் தன் . குறிகள் . index ( அ ) ஒவ்வொன்றாக அ முழு இல் ] ) )

            நிரல்பாகம் படித்தல் ( பெ ) : 
                ஆ = பெ [ ௦ ] 
                ஊ = next ( ( இ ஒவ்வொன்றாக இ , ஈ enumerate ( பெ [ ௧ : ] ) இல் if ஈ > ஆ ) , len ( பெ [ ௧ : ] ) ) + ௧ 
                கீழ் = பெ [௧:ஊ]
                கீழ் = படித்தல்(கீழ்) கீழ் ஆனால் ஏதேனில் ௧
                மேல் = பெ[ஊ:]
                mel = படித்தல் ( மேல் ) மேல் ஆனால் ஏதேனில் ௦
                பின்கொடு ஆ * கீழ் + mel 

            எண் = படித்தல் ( பெட்டியல் ) 

        தசம is not ஒன்றுமில்லை ஆனால் :
            தசம ஆனால்:
                முயற்சி:
                    எண் += float ( '.' + '' . join ( str ( தன் . குறிகள் . index ( த ) ) ஒவ்வொன்றாக த தசம இல் ) ) 
                except ValueError:
                    எழுப்பு
            ஏதேனில்:
                எண் = float(எண்)
        எதிர் ஆனால்:
            எண் *= -௧
        பின்கொடு எண்

    நிரல்பாகம் உரைக்கு(தன், எண்):
        எதிர் = எண் < ௦
        எண் = abs(எண்)

        முழு = floor(எண்)
        'e' in str(எண்) ஆனால்:
            எண், அடு = str(எண்).split('e')
            பின்கொடு தன்.உரைக்கு(float(எண்)) + தன்.அடுக்குக்குறி[௦] + தன்.உரைக்கு(int(அடு))

        முயற்சி:
            தசம = str(எண்).split('.')[௧]
        except IndexError:
            தசம = ஒன்றுமில்லை

        உரை = தன்._அடிமானம்_எழுதல்(முழு)

        len(உரை) இல்லை ஆனால்:
            உரை = தன்.குறிகள்[௦]

        எதிர் ஆனால்:
            உரை = '-' + உரை
        தசம ஆனால்:
            உரை += தன்.பிரிப்பு[௦] + ''.join(தன்.குறிகள்[int(த)] ஒவ்வொன்றாக த தசம இல்)
        பின்கொடு உரை

    நிரல்பாகம் சுருங்குறித்தொடர்(தன், வடிவம்=ஒன்றுமில்லை):
        முழு = f'{"".join(list(தன்.அடிமானங்கள்))}{தன்.குறிகள்}' 
        தொடர் = rf'[-+]?(([{முழு}]+([{தன்.பிரிப்பு}][{தன்.குறிகள்}]*)?)|([{தன்.பிரிப்பு}][{தன்.குறிகள்}]+))' 
        பின்கொடு rf'({தொடர்})|([{தன்.குறிகள்}]([{தன்.பிரிப்பு}][{தன்.குறிகள்}]*)?([{தன்.அடுக்குக்குறி}][-+]?[{முழு}]+))' 

    நிரல்பாகம் _அடிமானம்_எழுதல்(தன், எண்):
        மீதி = எண்
        உரை = ''

        ஒவ்வொன்றாக அடி, மதிப்பு reversed(தன்.அடிமானங்கள்.items()) இல்:
            ம = int(மீதி // மதிப்பு)
            ம ஆனால்:
                மீதி -= ம * மதிப்பு
                ம != ௧ ஆனால்:
                    உரை += தன்._அடிமானம்_எழுதல்(ம)
                உரை += அடி

        மீதி ஆனால்:
            உரை += தன்.குறிகள்[int(மீதி)]

        பின்கொடு உரை
